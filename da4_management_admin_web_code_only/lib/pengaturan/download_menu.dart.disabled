import 'package:flutter/material.dart';
import '../backend/downloadDatabase.dart.disabled';
import '../backend/keyToken.dart';

class DownloadMenu extends StatefulWidget {
  @override
  _DownloadMenuState createState() => _DownloadMenuState();
}

class _DownloadMenuState extends State<DownloadMenu> {
  final TextEditingController _passwordController = TextEditingController();
  bool _isLoading = false;

  void showLoadingOverlay() {
    setState(() {
      _isLoading = true;
    });
    showDialog<void>(
      context: context,
      barrierDismissible: false,
      builder: (BuildContext context) {
        return Stack(
          children: [
            Opacity(
              opacity: 0.3,
              child: ModalBarrier(dismissible: false, color: Colors.black),
            ),
            Center(
              child: CircularProgressIndicator(),
            ),
          ],
        );
      },
    );
  }

  void hideLoadingOverlay() {
    setState(() {
      _isLoading = false;
    });
    Navigator.of(context, rootNavigator: true).pop();
  }

  Future<void> _showPasswordDialog(
    BuildContext context,
    String option,
  ) async {
    final currentContext = context;
    return showDialog<void>(
      context: currentContext,
      barrierDismissible: false,
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text('Enter Password'),
          content: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              TextField(
                controller: _passwordController,
                obscureText: true,
                decoration: InputDecoration(
                  labelText: 'Password',
                ),
              ),
            ],
          ),
          actions: [
            TextButton(
              child: Text('Cancel'),
              onPressed: () {
                Navigator.of(context).pop();
              },
            ),
            TextButton(
              child: Text('Download'),
              onPressed: () {
                Navigator.of(context).pop();
                String enteredPassword = _passwordController.text;
                _downloadProcess(currentContext, option, enteredPassword);
              },
            ),
          ],
        );
      },
    );
  }

  void _downloadProcess(
      BuildContext context, String option, String password) async {
    int success = 4;
    showLoadingOverlay();
    if (password == KeyToken.confirm) {
      // Start loading

      success = await downloadDatabase(option);
      // Stop loading
      _passwordController.text = '';
    }

    String info = '';
    switch (success) {
      case 0:
        hideLoadingOverlay();
        info = '$option database downloaded successfully';
        break;
      case 1:
        hideLoadingOverlay();
        info = 'Failed to download $option database';
        break;
      case 2:
        hideLoadingOverlay();
        info = '$option data does not exist';
        break;
      case 3:
        hideLoadingOverlay();
        info = 'Error downloading $option database';
        break;
      case 4:
        hideLoadingOverlay();
        info = 'Wrong password';
        break;
    }

    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: success == 0 ? Text('Download Success') : Text('Error'),
          content: Text(info),
          actions: [
            TextButton(
              child: Text('OK'),
              onPressed: () {
                Navigator.pop(context);
              },
            ),
          ],
        );
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Download Database'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(8.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            Expanded(
              child: Card(
                child: InkWell(
                  onTap: () async {
                    _showPasswordDialog(context, "Menu");
                  },
                  child: const Padding(
                    padding: EdgeInsets.all(16.0),
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Icon(Icons.menu_book),
                        SizedBox(height: 8.0),
                        Text('Menu Toko'),
                      ],
                    ),
                  ),
                ),
              ),
            ),
            Expanded(
              child: Card(
                child: InkWell(
                  onTap: () async {
                    _showPasswordDialog(context, "Stock");
                  },
                  child: const Padding(
                    padding: EdgeInsets.all(16.0),
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Icon(Icons.shopping_cart),
                        SizedBox(height: 8.0),
                        Text('Stock Barang'),
                      ],
                    ),
                  ),
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
